{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Applications/XAMPP/xamppfiles/htdocs/aira/apps/chat-ui/src/utils/AppConfig.ts"],"sourcesContent":["import type { LocalizationResource } from '@clerk/types';\nimport type { LocalePrefixMode } from 'next-intl/routing';\nimport { enUS, frFR } from '@clerk/localizations';\n\nconst localePrefix: LocalePrefixMode = 'as-needed';\n\n// FIXME: Update this configuration file based on your project information\nexport const AppConfig = {\n  name: 'Nextjs Starter',\n  locales: ['en', 'fr'],\n  defaultLocale: 'en',\n  localePrefix,\n};\n\nconst supportedLocales: Record<string, LocalizationResource> = {\n  en: enUS,\n  fr: frFR,\n};\n\nexport const ClerkLocalizations = {\n  defaultLocale: enUS,\n  supportedLocales,\n};\n"],"names":[],"mappings":";;;;AAEA;;AAEA,MAAM,eAAiC;AAGhC,MAAM,YAAY;IACvB,MAAM;IACN,SAAS;QAAC;QAAM;KAAK;IACrB,eAAe;IACf;AACF;AAEA,MAAM,mBAAyD;IAC7D,IAAI,gLAAA,CAAA,OAAI;IACR,IAAI,gLAAA,CAAA,OAAI;AACV;AAEO,MAAM,qBAAqB;IAChC,eAAe,gLAAA,CAAA,OAAI;IACnB;AACF","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Applications/XAMPP/xamppfiles/htdocs/aira/apps/chat-ui/src/libs/i18nRouting.ts"],"sourcesContent":["import { defineRouting } from 'next-intl/routing';\nimport { AppConfig } from '@/utils/AppConfig';\n\nexport const routing = defineRouting({\n  locales: AppConfig.locales,\n  localePrefix: AppConfig.localePrefix,\n  defaultLocale: AppConfig.defaultLocale,\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,UAAU,CAAA,GAAA,wPAAA,CAAA,gBAAa,AAAD,EAAE;IACnC,SAAS,+IAAA,CAAA,YAAS,CAAC,OAAO;IAC1B,cAAc,+IAAA,CAAA,YAAS,CAAC,YAAY;IACpC,eAAe,+IAAA,CAAA,YAAS,CAAC,aAAa;AACxC","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Applications/XAMPP/xamppfiles/htdocs/aira/apps/chat-ui/src/libs/i18n.ts"],"sourcesContent":["import { hasLocale } from 'next-intl';\nimport { getRequestConfig } from 'next-intl/server';\nimport { routing } from './i18nRouting';\n\n// NextJS Boilerplate uses Crowdin as the localization software.\n// As a developer, you only need to take care of the English (or another default language) version.\n// Other languages are automatically generated and handled by Crowdin.\n\n// The localisation files are synced with Crowdin using GitHub Actions.\n// By default, there are 3 ways to sync the message files:\n// 1. Automatically sync on push to the `main` branch\n// 2. Run manually the workflow on GitHub Actions\n// 3. Every 24 hours at 5am, the workflow will run automatically\n\nexport default getRequestConfig(async ({ requestLocale }) => {\n  // Typically corresponds to the `[locale]` segment\n  const requested = await requestLocale;\n  const locale = hasLocale(routing.locales, requested)\n    ? requested\n    : routing.defaultLocale;\n\n  return {\n    locale,\n    messages: (await import(`../locales/${locale}.json`)).default,\n  };\n});\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;uCAYe,CAAA,GAAA,gRAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,EAAE,aAAa,EAAE;IACtD,kDAAkD;IAClD,MAAM,YAAY,MAAM;IACxB,MAAM,SAAS,CAAA,GAAA,uMAAA,CAAA,YAAS,AAAD,EAAE,gJAAA,CAAA,UAAO,CAAC,OAAO,EAAE,aACtC,YACA,gJAAA,CAAA,UAAO,CAAC,aAAa;IAEzB,OAAO;QACL;QACA,UAAU,CAAC;;;;;;;;;kBAAa,CAAC,WAAW,EAAE,OAAO,KAAK,CAAC,CAAC,EAAE,OAAO;IAC/D;AACF","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Applications/XAMPP/xamppfiles/htdocs/aira/apps/chat-ui/src/components/analytics/PostHogProvider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PostHogProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call PostHogProvider() from the server but PostHogProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/chat-ui/src/components/analytics/PostHogProvider.tsx <module evaluation>\",\n    \"PostHogProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,2QAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2FACA","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Applications/XAMPP/xamppfiles/htdocs/aira/apps/chat-ui/src/components/analytics/PostHogProvider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PostHogProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call PostHogProvider() from the server but PostHogProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/chat-ui/src/components/analytics/PostHogProvider.tsx\",\n    \"PostHogProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,2QAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,uEACA","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///Applications/XAMPP/xamppfiles/htdocs/aira/apps/chat-ui/src/components/DemoBadge.tsx"],"sourcesContent":["export const DemoBadge = () => (\n  <div className=\"fixed bottom-0 right-20 z-10\">\n    <a\n      href=\"https://github.com/ixartz/Next-js-Boilerplate\"\n    >\n      <div className=\"rounded-md bg-gray-900 px-3 py-2 font-semibold text-gray-100\">\n        <span className=\"text-gray-500\">Demo of</span>\n        {` Next.js Boilerplate`}\n      </div>\n    </a>\n  </div>\n);\n"],"names":[],"mappings":";;;;;AAAO,MAAM,YAAY,kBACvB,oQAAC;QAAI,WAAU;kBACb,cAAA,oQAAC;YACC,MAAK;sBAEL,cAAA,oQAAC;gBAAI,WAAU;;kCACb,oQAAC;wBAAK,WAAU;kCAAgB;;;;;;oBAC/B,CAAC,oBAAoB,CAAC","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///Applications/XAMPP/xamppfiles/htdocs/aira/apps/chat-ui/src/app/%5Blocale%5D/layout.tsx"],"sourcesContent":["import type { Metadata } from 'next';\nimport { hasLocale, NextIntlClientProvider } from 'next-intl';\nimport { setRequestLocale } from 'next-intl/server';\nimport { notFound } from 'next/navigation';\nimport { PostHogProvider } from '@/components/analytics/PostHogProvider';\nimport { DemoBadge } from '@/components/DemoBadge';\nimport { routing } from '@/libs/i18nRouting';\nimport '@/styles/global.css';\n\nexport const metadata: Metadata = {\n  icons: [\n    {\n      rel: 'apple-touch-icon',\n      url: '/apple-touch-icon.png',\n    },\n    {\n      rel: 'icon',\n      type: 'image/png',\n      sizes: '32x32',\n      url: '/favicon-32x32.png',\n    },\n    {\n      rel: 'icon',\n      type: 'image/png',\n      sizes: '16x16',\n      url: '/favicon-16x16.png',\n    },\n    {\n      rel: 'icon',\n      url: '/favicon.ico',\n    },\n  ],\n};\n\nexport function generateStaticParams() {\n  return routing.locales.map(locale => ({ locale }));\n}\n\nexport default async function RootLayout(props: {\n  children: React.ReactNode;\n  params: Promise<{ locale: string }>;\n}) {\n  const { locale } = await props.params;\n\n  if (!hasLocale(routing.locales, locale)) {\n    notFound();\n  }\n\n  setRequestLocale(locale);\n\n  return (\n    <html lang={locale}>\n      <body>\n        <NextIntlClientProvider>\n          <PostHogProvider>\n            {props.children}\n          </PostHogProvider>\n          <DemoBadge />\n        </NextIntlClientProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;AAGO,MAAM,WAAqB;IAChC,OAAO;QACL;YACE,KAAK;YACL,KAAK;QACP;QACA;YACE,KAAK;YACL,MAAM;YACN,OAAO;YACP,KAAK;QACP;QACA;YACE,KAAK;YACL,MAAM;YACN,OAAO;YACP,KAAK;QACP;QACA;YACE,KAAK;YACL,KAAK;QACP;KACD;AACH;AAEO,SAAS;IACd,OAAO,gJAAA,CAAA,UAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA,SAAU,CAAC;YAAE;QAAO,CAAC;AAClD;AAEe,eAAe,WAAW,KAGxC;IACC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,MAAM,MAAM;IAErC,IAAI,CAAC,CAAA,GAAA,uMAAA,CAAA,YAAS,AAAD,EAAE,gJAAA,CAAA,UAAO,CAAC,OAAO,EAAE,SAAS;QACvC,CAAA,GAAA,2MAAA,CAAA,WAAQ,AAAD;IACT;IAEA,CAAA,GAAA,iSAAA,CAAA,mBAAgB,AAAD,EAAE;IAEjB,qBACE,oQAAC;QAAK,MAAM;kBACV,cAAA,oQAAC;sBACC,cAAA,oQAAC,wRAAA,CAAA,yBAAsB;;kCACrB,oQAAC,wKAAA,CAAA,kBAAe;kCACb,MAAM,QAAQ;;;;;;kCAEjB,oQAAC,qJAAA,CAAA,YAAS;;;;;;;;;;;;;;;;;;;;;AAKpB","debugId":null}}]
}