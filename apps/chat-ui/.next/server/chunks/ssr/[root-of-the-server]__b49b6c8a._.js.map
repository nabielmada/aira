{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Applications/XAMPP/xamppfiles/htdocs/aira/apps/chat-ui/src/libs/Env.ts"],"sourcesContent":["import { createEnv } from '@t3-oss/env-nextjs';\nimport { z } from 'zod';\n\nexport const Env = createEnv({\n  server: {\n    ARCJET_KEY: z.string().startsWith('ajkey_').optional(),\n    CLERK_SECRET_KEY: z.string().min(1),\n    DATABASE_URL: z.string().optional(),\n    LOGTAIL_SOURCE_TOKEN: z.string().optional(),\n  },\n  client: {\n    NEXT_PUBLIC_APP_URL: z.string().optional(),\n    NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: z.string().min(1),\n    NEXT_PUBLIC_POSTHOG_KEY: z.string().optional(),\n    NEXT_PUBLIC_POSTHOG_HOST: z.string().optional(),\n  },\n  shared: {\n    NODE_ENV: z.enum(['test', 'development', 'production']).optional(),\n  },\n  // You need to destructure all the keys manually\n  runtimeEnv: {\n    ARCJET_KEY: process.env.ARCJET_KEY,\n    CLERK_SECRET_KEY: process.env.CLERK_SECRET_KEY,\n    DATABASE_URL: process.env.DATABASE_URL,\n    LOGTAIL_SOURCE_TOKEN: process.env.LOGTAIL_SOURCE_TOKEN,\n    NEXT_PUBLIC_APP_URL: process.env.NEXT_PUBLIC_APP_URL,\n    NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:\n      process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY,\n    NODE_ENV: process.env.NODE_ENV,\n    NEXT_PUBLIC_POSTHOG_KEY: process.env.NEXT_PUBLIC_POSTHOG_KEY,\n    NEXT_PUBLIC_POSTHOG_HOST: process.env.NEXT_PUBLIC_POSTHOG_HOST,\n  },\n});\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEO,MAAM,MAAM,CAAA,GAAA,mLAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,QAAQ;QACN,YAAY,uMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,UAAU,CAAC,UAAU,QAAQ;QACpD,kBAAkB,uMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QACjC,cAAc,uMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QACjC,sBAAsB,uMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC3C;IACA,QAAQ;QACN,qBAAqB,uMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QACxC,mCAAmC,uMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QAClD,yBAAyB,uMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;QAC5C,0BAA0B,uMAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC/C;IACA,QAAQ;QACN,UAAU,uMAAA,CAAA,IAAC,CAAC,IAAI,CAAC;YAAC;YAAQ;YAAe;SAAa,EAAE,QAAQ;IAClE;IACA,gDAAgD;IAChD,YAAY;QACV,YAAY,QAAQ,GAAG,CAAC,UAAU;QAClC,kBAAkB,QAAQ,GAAG,CAAC,gBAAgB;QAC9C,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,sBAAsB,QAAQ,GAAG,CAAC,oBAAoB;QACtD,qBAAqB,QAAQ,GAAG,CAAC,mBAAmB;QACpD,iCAAiC;QAEjC,QAAQ;QACR,yBAAyB,QAAQ,GAAG,CAAC,uBAAuB;QAC5D,0BAA0B,QAAQ,GAAG,CAAC,wBAAwB;IAChE;AACF","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///Applications/XAMPP/xamppfiles/htdocs/aira/apps/chat-ui/src/components/analytics/PostHogPageView.tsx"],"sourcesContent":["'use client';\n\nimport { usePathname, useSearchParams } from 'next/navigation';\nimport { usePostHog } from 'posthog-js/react';\nimport { Suspense, useEffect } from 'react';\n\nconst PostHogPageView = () => {\n  const pathname = usePathname();\n  const searchParams = useSearchParams();\n  const posthog = usePostHog();\n\n  // Track pageviews\n  useEffect(() => {\n    if (pathname && posthog) {\n      let url = window.origin + pathname;\n      if (searchParams.toString()) {\n        url = `${url}?${searchParams.toString()}`;\n      }\n\n      posthog.capture('$pageview', { $current_url: url });\n    }\n  }, [pathname, searchParams, posthog]);\n\n  return null;\n};\n\n// Wrap this in Suspense to avoid the `useSearchParams` usage above\n// from de-opting the whole app into client-side rendering\n// See: https://nextjs.org/docs/messages/deopted-into-client-rendering\nexport const SuspendedPostHogPageView = () => {\n  return (\n    <Suspense fallback={null}>\n      <PostHogPageView />\n    </Suspense>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,kBAAkB;IACtB,MAAM,WAAW,CAAA,GAAA,wJAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,eAAe,CAAA,GAAA,wJAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,UAAU,CAAA,GAAA,oLAAA,CAAA,aAAU,AAAD;IAEzB,kBAAkB;IAClB,CAAA,GAAA,2NAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,YAAY,SAAS;YACvB,IAAI,MAAM,OAAO,MAAM,GAAG;YAC1B,IAAI,aAAa,QAAQ,IAAI;gBAC3B,MAAM,GAAG,IAAI,CAAC,EAAE,aAAa,QAAQ,IAAI;YAC3C;YAEA,QAAQ,OAAO,CAAC,aAAa;gBAAE,cAAc;YAAI;QACnD;IACF,GAAG;QAAC;QAAU;QAAc;KAAQ;IAEpC,OAAO;AACT;AAKO,MAAM,2BAA2B;IACtC,qBACE,oQAAC,2NAAA,CAAA,WAAQ;QAAC,UAAU;kBAClB,cAAA,oQAAC;;;;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Applications/XAMPP/xamppfiles/htdocs/aira/apps/chat-ui/src/components/analytics/PostHogProvider.tsx"],"sourcesContent":["'use client';\n\nimport posthog from 'posthog-js';\nimport { PostHogProvider as PHProvider } from 'posthog-js/react';\nimport { useEffect } from 'react';\nimport { Env } from '@/libs/Env';\nimport { SuspendedPostHogPageView } from './PostHogPageView';\n\nexport const PostHogProvider = (props: { children: React.ReactNode }) => {\n  useEffect(() => {\n    if (Env.NEXT_PUBLIC_POSTHOG_KEY) {\n      posthog.init(Env.NEXT_PUBLIC_POSTHOG_KEY, {\n        api_host: Env.NEXT_PUBLIC_POSTHOG_HOST,\n        capture_pageview: false, // Disable automatic pageview capture, as we capture manually\n        capture_pageleave: true, // Enable pageleave capture\n      });\n    }\n  }, []);\n\n  if (!Env.NEXT_PUBLIC_POSTHOG_KEY) {\n    return props.children;\n  }\n\n  return (\n    <PHProvider client={posthog}>\n      <SuspendedPostHogPageView />\n      {props.children}\n    </PHProvider>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQO,MAAM,kBAAkB,CAAC;IAC9B,CAAA,GAAA,2NAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,wIAAA,CAAA,MAAG,CAAC,uBAAuB,EAAE;YAC/B,qKAAA,CAAA,UAAO,CAAC,IAAI,CAAC,wIAAA,CAAA,MAAG,CAAC,uBAAuB,EAAE;gBACxC,UAAU,wIAAA,CAAA,MAAG,CAAC,wBAAwB;gBACtC,kBAAkB;gBAClB,mBAAmB;YACrB;QACF;IACF,GAAG,EAAE;IAEL,IAAI,CAAC,wIAAA,CAAA,MAAG,CAAC,uBAAuB,EAAE;QAChC,OAAO,MAAM,QAAQ;IACvB;IAEA,qBACE,oQAAC,oLAAA,CAAA,kBAAU;QAAC,QAAQ,qKAAA,CAAA,UAAO;;0BACzB,oQAAC,wKAAA,CAAA,2BAAwB;;;;;YACxB,MAAM,QAAQ;;;;;;;AAGrB","debugId":null}}]
}